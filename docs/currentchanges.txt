V3.0 of softconsole is now available.  This is the completion of some major changes that allow the console to operate with ISY and Home Assistant hubs.  A single console can connect with multiple hubs (multiple ISYs, multiple HAs, or a combination of both).  The Home Assistant support includes support for Nest thermostats via HA and probably supports other units since it uses the standard HA climate interface but hasn't been tested with units other than Nest.  It also moves to a fully cached state model which makes entering a new screen slightly faster.  While no instance of the state being out of sync between the hub and console has been seen there is an alert proc available that can be run periodically (e.g., once or twice a day) to verify the cached state correctness.  Existing config files should be compatible but there is a new format to support multiple hubs.  Also added is support for a hub becoming unavailable for some period of time due to reboots, network issues, etc.  Key screen with keys corresponding to unavailable nodes now display as unusable.

V3.01 is a minor bug fix/cleanup release.  The main addition is a minimalist version of the install script meant to be used with the "stretch-lite" Raspbian distribution on Pi0 systems.  It doesn't install VNC so only ssh access to the finished system is available.  This release fixes a few odd timing race conditions that sometimes led to anomalous log messages.  It also has a patch to handle junk forecasts from WeatherUnderground that seem to be somewhat common of late.  This is where they return a "forecast" for Jan 3, 2018.  The console suppresses these and just continues to use the last good forecast for display (or an error message if none such exists).

V3.1 of softconsole adds a number of new/updated capabilities.  Of most importance is weather support.  WeatherUnderground has become increasingly flakey as a provider and they have now announced that will drop support for their current API at the end of the year (they claim they may replace it with a new personal API but have no details at this point).  As a result the release adds support for an additional weather provider, APIXU, who provides free weather for personal, limited use (10000 calls/month).  Structurally the program has actually separated the weather provider part from the rest of the weather support logic so it would be straightforward to add other providers by modeling them after the apixustore.py file.  (Basically, this code simply has to map the, typically JSON, returned by a provider to a standard form of naming using elsewhere in the console.)  Unfortunately, adding this support made it too difficult to maintain backward compatibility of the config file so you will need to update yours even if you are using WU by adding section(s) to define weather provider(s) and sections to define internal location names from which weather is to be fetched and map to the provider's location code.  See the example auth.cfg, weathersources.cfg, and any weather cfg file for example of how this works.  The WU proveder has been made more robust in an effort to deal with the WU flakiness in the meantime (things like missing sky conditions, out of date data, stations gone missing, etc.)

Some other changes:
- This release also updates Home Assistant support for their new authentication regime (post 0.77 of HA).  Use their access tokens and supply that as the password.  A small added feature is the display of a small light (unobtrusive) dot in the upper right of the display if a Warning or Error level entry has been made in the log file since the log was last looked at.  Accessing the log from the maintenance screen clears the indicator.
- Two new screen types have been added that will probably not be of interest to anyone other than me that support Octoprint (a manager for 3D printers) and Sonos systems.  The Sonos screen depends upon Home Assistant running.
- The termshortenlist has been moved to the Console directory (where as a config type file it really belonged) for :
- As always lots of little bug fixes throughout.

V3.11 is a very minor clean up from 3.1.  It fixes some benign error reports that didn't belong in the code.  It also continues to imporve some of the communication error reports that can occur when packets get dropped between hubs and the console.  A general improvement is that when you access the maintenance log when there is an outstanding "error in the log" indicator (see 3.1 release) the console auto pages to the first unseen Warning or higher message in the log.  For Home Assistant hubs it handles a few more types of node report messages without logging them as anomolous and fixes issues with running HA scripts from a console key.

V3.2 is a notable release that will mainly be of interest if running more than one console.  Its major addition is the use of MQTT when configured to allow multiple consoles to report their operational status and to coordinate any Warning or Error level log entries.  This permits the user to look at the log on any single console and see any serious log entries made by all the consoles in the house.  It also coordinates the on-screen error indicator across consoles.  It allows a simple look at the current status of all running consoles, as well as the hardware/software of the systems they are running on.  Finally, it allows external issuing of commands to all or specific consoles via an MQTT publish.  These additions were motivated by my personal experience running 8 consoles across 2 homes.  This version  also moves all major system and screen parameters to the store model which makes them accessible to as screen configuration and alert parameters as well as via the MQTT set mechanism.  In addition to this (which is only enables if you configure MQTT so not an issue if you don't) there are a lot of improvements in error handling of various ISY and HomeAssistant error cases.  In particular, the console will now initiate an ISY query when it sees an ISY node with a communications error (motivater by a particular issue I had with my garage door opener).  It also notes error conditions that clear as well as prolonged ISY busy periods (expect one at the overnight daily whole house query).  In general, error messages have been cleaned up to avoid pointless Warning level messages where possible.  Finally, some additional diagnostic capabilities were added to allow dumping of the history of events that led up to a situation.  This version also deprecates WeatherUnderground support completely since it will be killed off by them at end of month.  All the above has been added to the documentation.

V3.2.1 is a very minor bug fix release.  It improves some error handling for the new APIXU weather service reports, supports LocationSize = 0 directive for weatherscreens (like it does for timetemp screens), avoids extraneous log messages for users running node servers on V3 ISY firmware, and allows SSL connection to an ISY using self generated keys (actually by turning off SSL certificate validation).  It also includes some internal structural cleanups that should have no visible impacts.

V3.3 is a significant internal cleanup as well as adding a few features.  It adds an ability to specify a title for a screen via the keywords - see the usage notes for details.  If reduces or downgrades unneeded reporting in the log by changing the severity of many messages from Warning to Info or Detail.  This should reduce log clutter.  It improves some of the term shortening for weather based on experience with the APIXU weather service.  It updates Home Assistant support to be run quietly with versions up to 0.90 by handling some of the newer HA domains that get reported.  It also no longer installs any homeassistant libraries as part of the initial install which simplifies/shortens the install process for those who don't use HA.  It now installs Dan's light sensor alert - see his github for details at https://github.com/ScrewLooseDan/softconsole_sensor_alert.  Autoversion downloads are now done asyncronously to the console interactions so that the console isn't locked up while the new version is set up - this is mainly an issue on pi0 systems due to their speed making the setup a somewhat long process.  Explicit maintenance screen updates are still syncronous.  The release also adds a new alert that some might want to use.  I have discovered that there must be some sort of a memory leak in Raspbian desktop since after very long up-times (40+ days) the Raspian X desktop that is created by VNC sessions winds up with huge memory use and eventually will cause the console to lock up.  This alert (lxpanelreset) is meant to be run periodically (probably once every few weeks would be enough but I just run it once per day since it is harmless) to do a reset on the lxpanel which frees the memory.  You could also do this with crontab but this saved me from needing to edit all my system crontabs.  This version makes a major cleanup to how internal timer work for the console.  This should be invisible to all users as it was done to make my maintenance and development easier but if you notice something strange regarding timing do let me know since regressions are always a risk with reworks.  It adds a flag on the maintenance debug flag screen to force out a message to clear error indicators of all networked systems if you are using the multi-console error notice stuff.  It adds a bit of a failsafe mechanism to catch dead consoles that get hung in a strange state.  This doesn't happen often, but I had one system that seemed prone to it (possibly failing hardware) so I added a dead man timer process to restart a console in such a state.  Again - this shouldn't be visible to you but . . .  If anyone is running the "homerelease" version, there are some bug tracking/logging things enabled in that version - probably a good reason not to run my homerelease version as it is really meant for my houses.

-----
V3.3.1 is a minor update primarily to handle a discovery I made that any code that touches the file system on a Pi in any way can cause delays of many (up to 10) seconds.  Normal logging activity from the console could therefore cause what seemed to be stalls of the interface.  This release moves file system interactions to asyncronous threads that can suffer the delays without being noticed.  The release also now handles Home Assitant nodes that the console knows about but that are not on-line in HA at the time the console starts.  This can happen on systems that cohost both a console and home assistant at power up time because HA can be slower to initialize that the console.  Other minor code cleanups and small bug fixes as always.

V3.4 is a moderate update.  The major functional addition is GOTO keys which now allow you to specify a tree structured relationship among screens in addition to the chain of screens supported to this point.  This was a user request in the discussion thread and is documented in the usage notes.  Following on to the previous release a number of console activities that can take a while have been made asyncronous including fetching weather, network health checks, checking the sha for automatic updates, and some internal debug logging.  These changes further reduce any console responsiveness lag.  The only visible impact is that on the first access to a weather screen for which weather has not yet been fetched you may see a momentary message that a fetch is in progress whereas previously the screen would be effectively locked while this was happening.  Some console performance stats are now reported via MQTT.  This release supports the Pimoroni 4" display as you may have noted from the lengthy remote development effort above in the thead.  In doing this, I reorganized how screens and touch information are input into the console which should make it easier to incorporate other screens in the future, as well as to handle differences between Stretch and Buster versions of Raspbian (which have frame buffers named slightly differently).  There are changes to the install scripts to allow for user intalled screens versus the set the script handles, to allow installation on Buster systems.  This version has been tested to run on Buster, though since that version has only been available for a few days its use has been somewhat limited.  One other small change: previously key color for a key in the off state would be dulled even when specific colors were provided for KeyColorOn and KeyColorOff.  Now if both of these are specified they are used as is and not dulled.

V3.5 is primarily aimed at simplifying administration of multiple consoles on a network.  It completely reworked the multi-console error indicator and command structure.  If you are running multiple consoles with MQTT, when you enter the Maintenance mode you will see an additional option for network consoles.  That will provide access to screens that report all available status for other consoles on the network, including the error status of their logs, the versions of hw and sw they are running, their uptime, etc.  It also provides access to issue commands to other consoles (or for commands that make sense, all consoles).  You can display error logs (either all or just recent errors), clear error indicators, request restarts, etc.  Note that as part of this rework, the meaning of the error indicator in the upper left corner of the screen has been changed.  A solid cirle indicates an error report on some other console on the network while a cross indicates an error on this console.  Both may be present if appropriate.  Also, remote errors are no longer reported in the local log since they are directly available via the remote screens.  Also note that some advanced commands for administration (accessing development versions for example) have been moved to behind double taps on the main select version and network console name buttons to reduce normal clutter.

This release also adds HorizButtonGap and VertButGap parameters to allow separating the buttons on the display.  It incorporates a number of structural changes to how HomeAssistant hubs are handled but none of these should be user visible.  This version has been tested and runs fine on Buster.  However, be aware that some Buster installations seem to locate the frame buffer at /etc/fb0 and others as /etc/fb1.  The code attempts to get the right buffer but if you find that the console seems to start but does not display anything, use the screendefinitions (as described in the useage notes) to force the display to what you need.  The release also is more tolerant of weather outages at APIXU by waiting longer to post errors to the log when the service is not reporting meaningful weather, since APIXU seems to sometimes go autistic for a few hours.


??Change overscan setting fo pi7 install on Buster

V3.5.1 is a quick release to add DarkSky as a weather provider given that APIXU is going away.  Use of DarkSky is pretty much the same as use of APIXU was with one notable difference:  DarkSky only accepts lattitude/longitude as a location.  To convert existing weather to DarkSky: go to their website and create a (free) account.  Change the name of the weather provider in your config files from (probably) [APIXU] to [DarkSky].  Change the location parameter for each place from its current name to the lat,lon pair for the location.  An easy way to get that is to go to latlon.net where you can input a place name or use a map to quickly get the coordinates.  This release has gotten a bit less testing at my house than the usual release because of the urgent nature of getting it out but it has shown to be solid.  One thing I have noticed about Dark Sky is that their condition summary phrases tend to me a lot wordier than the previous weather guys.  I beefed up the term shortening logic a bit to help but you may still see more long phrases than in the past.  Of course you can, as before, manually change those via the termshortenlist.

V3.5.2 fixes a small bug in the installation scripts that would cause a failure on a new install.  It also adds limited line wrapping for long weather forecast descriptions that seem common with Dark Sky weather.  It also fixes a few minor bugs that I noticed along the way.

V3.6
This release adds two major capabilities and handles a number of smaller issues/bugs.  The first major change is to allow store item values to be substituted in screen titles.  This permits any screen title to display, e.g., a local temperature or some other value of interest.  To support this a new parameter ScreenTitleFields is added that expects a list of fields to be substituted.  ScreenTitle now supports Python style formatting placeholders into which the fields will be substituted.  If the screen is one that would persist for a long period of time but you want it repainted regularly to display field value changes you can now specify a parameter Clocked = <seconds> which will cause a repaint every <seconds>.  Usefully related to this are entries in the System store for Time and UpTime.  Time returns the epoch time if used bare or may be used in a form Time:<format> string to return a textual time using standard Python/Unix time formatting strings.  This guarantees that changes to substituted fields in the title will be refreshed at this interval.  For an example of using this to display temperatures see example file config-rpi-dev7.txt, specifically the section for LR1.
The second major change to how navigation works for Maintenance screens.  These have always used a different style of navigation that regular screens (not using the Nav keys at the bottom).  These have been changed to use tree of screens model introduced in release 3.4 to use Home and Back keys for navigation.  This makes exit from maintenance always easy (Home key) and return to previous screen consistent (Back key).
The release also updates support to handle the new version of Home Assistant climate devices (Thermostats) that was introduced there a while back.  It will still support the old climate devices for now using the hub type HASS.0 (or since the 0 is a version value that defaults to 0 just HASS) and the new style using the hub type HASS.1.  The release also has fixes for a number of small bugs and does some general housekeeping on error and log messages.

V3.6.1
This release adds support for Weatherbit as a provider.  This is to provide an alternative to DarkSky which announced ending it service in 12/21.  Use type=Weatherbit for this provider.  This provider supports an additional option units = 'I' or units ='M' to request Imperial or Metric reports.  If omitted it defaults to Imperial.

V3.6.2
This release adds support for multiple consoles on a network to share Weatherbit data so as to reduce the number of daily calls to the service.  Provided that the
consoles are running MQTT, they will broadcast their weather fetches to caches in other consoles.  If a recent update exists in its cache, a console will use that
data rather than doing its own fetch.  Thus, e.g., if the consoles are all set to update weather for a location once per hour, only one of them will actually do a
fetch from the service while the others will see that data appear in their caches without an explicit fetch.  This helps limit the use of the service calls which for
free accounts are limited to effectively 250 current/forecast calls per day.  As part of this update, error messages around weather fetch errors have been cleaned up.

V3.6.3
This release fixes some installation issues caused by changes in the underlying OS release support for the Raspberry Pi 7" screen and
the Adafruit installation scripts for the PiTFT 3.5" and 2.8" screens.  The fixes are also a bit more resilient against future changes that
might occur to such scripts.  While ultimately it is impossible to guarantee compatibilty with any future changes, at least the errors raised
may more directly point to the problem so that it can be quickly resolved.  The installation process also now gets all the user
interaction done before anything else so that the long running part of the scripts that update the OS can be done unattended.

The release also fixes a bug with blinking keys on clocked screens where the blinking didn't show up and a bug where a bad weather fetch from
Weatherbit could pollute the weather info cache for a fairly long period of time.  Some of the periodic statistics reporting in the log file
has also been revised.

V3.6.4
Minor release for some bug fixes and small improvements:
  Adds an option to suppress Warning level message on reconnects to handle weak WiFi units (ErrLogReconnects defaults to True)
  Catches more errors while creating screens to provide better diagnosis and avoid early abort
  Fixes bug where HA climate wasn't initializing state correctly which meant display was wrong until first climate update happened
  Fixes bug to handle network status display error gracefully
  Adds pause/resume to Octoprint screen

V3.7
This release primarily adds support for soft rotation of the display that is required for the Pi4, at least when used with the 7" Pi display.  Pi 4 display drivers don't use the frame buffer in the same way as previous models so they may not honor rotations set at the system level.  This results in the native desktop displaying in one orientation but the console displaying in another.  The useage notes explain how to set the screen type to use soft rotation and the installation scripts now add support for this. (Note this has been tested with the Pi 7", the 28c PiTFT, and the 35r PiTFT screens at this point but should work generally.)  This provides general purpose flexibilty to arrange the console screen orientation as you like easily (and since it is set at console start changing the orientation is also very straightforward).

The console install scripts have been streamlined in this release to avoid the second reboot that used to be required.  This should somewhat speed up installation although the bulk of the time is still in updating the base system to current.

 The release also fixes a bug when an alert screen gets invoked while in Maintenance mode, a bug in MQTT status handling.  It also reworks Home Assistant restart code to insure that states are correct for changes that happened while the console was offline.  Finally it again adjusts the use of Adafruit install script use to handle their changes related to a 28c PiTFT.

V3.8
This release adds a new screen type "Picture" to the console that allows the console to also act like a photo frame.  It supports a directory mode that sequentially displays jpg files found in that directory to the screen while that screen is active.  The directory is monitored for changes and those are reflected in the displayed photos within a few cycles.  It also supports a single picture mode that displays only a single jpg which is monitored for changes.  In this mode changes are reflected to the display within 3-4 seconds and so is suitable for use if the desire is to display changing screen captures or the like.  See the description in the useage notes for all the details on how it works.

The release also adds support for username/password for MQTT which was previously missing.  It adds an advanced network node command to the maintenance screens to clear retained knowlege of a dead node from the MQTT broker.  It also will handle MQTT server down situations more gracefully.  Finally, it adds a small developer oriented feature to enable personalized operations to be done on every console boot.  See the Developers Notes section of the useage notes for more information.

FileWatch alerts, filewatch info to alert screens, semi transparency of nav keys on pic screens, allow varkey to have Program param. HAattr store for sensors and attributes, weather fetch independent of screens, HA attr access, autoclear for filewatch,